{"note":[{"id":"7aae2d2ba3dd4b2a894613620f656bd7","title":"VSCode 使用docker-compose进行golang开发","body":"# VSCode 使用docker-compose进行golang开发\n\n## O 前言\n\n在网上搜索使用vscode 进行golang的docker配置，有大量的文章，在官网也有很详细的说明，但我就是看不明白！！\n\n自己搞了一晚上，总算把所有的坑填上了。记录一下，聊以自慰。\n\n## 一、 前置操作\n\n### 安装vscode 略\n\n### 安装golang 略\n\n### golang使用module 模式而非 GOPATH, 略\n\n### vscode 中安装 remote-containers 插件，略\n\n## 二、新建go 项目\n\n1. 创建文件夹 `/golang/study.06`， 并使用 vscode 打开。\n\n2. 新建`main.go`\n我这里使用`\n\n```golang\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc homepage(w http.ResponseWriter, r *http.Request) {\n\t// 显示内容\n\tfmt.Fprintf(w, \"Hello golang http in docker！\")\n}\n\nfunc main() {\n\t// 设置路由\n\thttp.HandleFunc(\"/\", homepage)\n\n\t// 启动web服务，监听 9090\n\tlog.Fatel(http.ListenAndServe(\":9090\", nil))\n\n}\n```\n\n3. 初始化模块\n\n\n``` bash\n# 初始化模块\ngo mod init study06\n\n# 下载依赖模块\ngo mod tidy\n\n```\n\n4. 测试\n\n```\n# 启动服务\ngo run .\n\n```\n\n在浏览器查看`http://localhost:9090` ，可以看到效果。\n![7e456104be1a3f46c969fde1e1e5e9e1.png](:/192740b583244d7c86a5cdc10f3017f7)\n\n\n5. 文件目录\n```\nstudy.06\n|-- go.mod\n|-- main.go\n```\n\n\n## 三、添加docker-compose支持\n\n### 1. 添加模板\n\n执行 `F1`， `Remote-Containers: Add Development Container Configuration Files`，依次选择 `Go`， `default`，`lts(default)`，`确定`。\n\n![1db1d262bfe97deb5c5b18c3b8b66db7.png](:/93278618dd8140189629f782e3543207)\n\n![975a40e45152240da6ca215df7ff1de9.png](:/8a353506ae124b7e80fa76ae437389ff)\n\n![8c8634f9e8f971273fd1e32af3e6ee71.png](:/efefecdb4bae4916b67c9f803c07822a)\n\n![2ff97372787872284f87c9d4d75e5885.png](:/795e3a1e3cd5491986e45d684f6b6aae)\n\n![3c125d21da1d8f0f313cb4f6e9d8223c.png](:/1cf3215966374073be4a30c066570f4d)\n\n此时，添加了 `.devcontainer/.devcontiner.json`和`.devcontaier/Dockerfile`两个文件。\n\n### 2. 使用`docker-compose`\n\n在`.devcontainer`中添加`docker-compose.yml`,也可以多添加几个配置，如`docker-compose.dev.yml`。\n\n``` yaml\n# docker-compose.yml\n\nversion: '3'\n\nservices:\n  study-06:\n    build:\n      context: .\n      dockerfile: Dockerfile\n      \n```\n\n```yaml\n# docker-compose.dev.yml\n\nversion: '3'\n\nservices:\n  study-06:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    volumes:\n      - ..:/workspace:cached\n    ports:\n      - 9090:9090\n\n    cap_add:\n      - SYS_PTRACE\n\n    security_opt:\n      - seccomp:unconfined\n    \n    command: /bin/sh -c \"while sleep 1000; do :; done\"\n\n  \n\n\n```\n\n### 3. 修改 `devcontainer.json`\n\n默认配置是使用`Dockerfile`的，修改`devcontainer.json` 以使用`docker-compose`。\n\n``` json\n// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:\n// https://github.com/microsoft/vscode-dev-containers/tree/v0.209.6/containers/go\n{\n\t\"name\": \"Go\",\n\t\"dockerComposeFile\" : [\n\t\t\"docker-compose.yml\",\n\t\t\"docker-compose.dev.yml\"\n\t],\n\t\"service\" : \"study-06\",\n\t\"workspaceFolder\": \"/workspace\",\n\t\"shutdownAction\": \"stopCompose\",\n\t// \"build\": {\n\t// \t\"dockerfile\": \"Dockerfile\",\n\t// \t\"args\": {\n\t// \t\t// Update the VARIANT arg to pick a version of Go: 1, 1.16, 1.17\n\t// \t\t// Append -bullseye or -buster to pin to an OS version.\n\t// \t\t// Use -bullseye variants on local arm64/Apple Silicon.\n\t// \t\t\"VARIANT\": \"1-bullseye\",\n\t// \t\t// Options\n\t// \t\t\"NODE_VERSION\": \"lts/*\"\n\t// \t}\n\t// },\n\t// \"runArgs\": [ \"--cap-add=SYS_PTRACE\", \"--security-opt\", \"seccomp=unconfined\" ],\n\n\t// Set *default* container specific settings.json values on container create.\n\t\"settings\": {\n\t\t\"go.toolsManagement.checkForUpdates\": \"local\",\n\t\t\"go.useLanguageServer\": true,\n\t\t\"go.gopath\": \"/go\",\n\t\t\"go.goroot\": \"/usr/local/go\"\n\t},\n\n\t// Add the IDs of extensions you want installed when the container is created.\n\t\"extensions\": [\n\t\t\"golang.Go\"\n\t],\n\n\t// Use 'forwardPorts' to make a list of ports inside the container available locally.\n\t// \"forwardPorts\": [],\n\n\t// Use 'postCreateCommand' to run commands after the container is created.\n\t// \"postCreateCommand\": \"go version\",\n\n\t// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.\n\t\"remoteUser\": \"vscode\"\n}\n\n```\n\n### 4. 修改`Dockerfile`\n\n最后添加 `Expose 9090` 绑定端口\n\n### 5. 在容器中打开文件夹\n\n`F1` 执行 `Open Folder in Container`,选择 `study.06`目录，此时`vscode`会编译并运行镜像，进入镜像中的环境。\n\n![6aac815f71728ea0548056b136af6619.png](:/85cbc4ef168343b6beccb7e49273986f)\n\n执行 `go run .`，就可以在 `http://localhost:9090` 中看到结果了。\n\n### 6. 更新\n\n如果对`docker`文件进行任何修改后，可以执行 `F1` -> `Rebuild 重新生成镜像`。\n\n","createdTime":1641826590166,"updatedTime":1641831531737,"resources":[{"id":"192740b583244d7c86a5cdc10f3017f7","title":"7e456104be1a3f46c969fde1e1e5e9e1.png","file_extension":"png","user_updated_time":1641827564767},{"id":"1cf3215966374073be4a30c066570f4d","title":"3c125d21da1d8f0f313cb4f6e9d8223c.png","file_extension":"png","user_updated_time":1641830331530},{"id":"795e3a1e3cd5491986e45d684f6b6aae","title":"2ff97372787872284f87c9d4d75e5885.png","file_extension":"png","user_updated_time":1641830320516},{"id":"85cbc4ef168343b6beccb7e49273986f","title":"6aac815f71728ea0548056b136af6619.png","file_extension":"png","user_updated_time":1641831437629},{"id":"8a353506ae124b7e80fa76ae437389ff","title":"975a40e45152240da6ca215df7ff1de9.png","file_extension":"png","user_updated_time":1641830296762},{"id":"93278618dd8140189629f782e3543207","title":"1db1d262bfe97deb5c5b18c3b8b66db7.png","file_extension":"png","user_updated_time":1641830276789},{"id":"efefecdb4bae4916b67c9f803c07822a","title":"8c8634f9e8f971273fd1e32af3e6ee71.png","file_extension":"png","user_updated_time":1641830311202}],"tags":[{"id":"7a21401b8eec4e8c89cae2eed103365f","title":"golang","parent_id":""},{"id":"7c69e8e1397c464eb0737e0b128755d8","title":"blog","parent_id":""},{"id":"c5e9c2eb89c645f6adad5e9e58d1492c","title":"vscode","parent_id":""}]}],"resource":[{"id":"192740b583244d7c86a5cdc10f3017f7","title":"7e456104be1a3f46c969fde1e1e5e9e1.png","file_extension":"png","user_updated_time":1641827564767},{"id":"1cf3215966374073be4a30c066570f4d","title":"3c125d21da1d8f0f313cb4f6e9d8223c.png","file_extension":"png","user_updated_time":1641830331530},{"id":"795e3a1e3cd5491986e45d684f6b6aae","title":"2ff97372787872284f87c9d4d75e5885.png","file_extension":"png","user_updated_time":1641830320516},{"id":"85cbc4ef168343b6beccb7e49273986f","title":"6aac815f71728ea0548056b136af6619.png","file_extension":"png","user_updated_time":1641831437629},{"id":"8a353506ae124b7e80fa76ae437389ff","title":"975a40e45152240da6ca215df7ff1de9.png","file_extension":"png","user_updated_time":1641830296762},{"id":"93278618dd8140189629f782e3543207","title":"1db1d262bfe97deb5c5b18c3b8b66db7.png","file_extension":"png","user_updated_time":1641830276789},{"id":"efefecdb4bae4916b67c9f803c07822a","title":"8c8634f9e8f971273fd1e32af3e6ee71.png","file_extension":"png","user_updated_time":1641830311202}]}
